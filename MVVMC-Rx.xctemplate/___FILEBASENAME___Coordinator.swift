//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created ___FULLUSERNAME___ on ___DATE___.
//  Copyright Â© ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Hanif Sugiyanto @hanifsgy
//

import RxSwift
import RxCocoa
import UIKit


protocol ___VARIABLE_productName:identifier___Navigator {

}

final class ___VARIABLE_productName:identifier___Coordinator: BaseCoordinator<Void> {

    private var navigationController: UINavigationController
    
    init(navigationController: UINavigationController) {
        self.navigationController = navigationController
    }

    override func start() -> Observable<Void> {
        let viewController = ___VARIABLE_productName:identifier___ViewController()
        let viewModel = ___VARIABLE_productName:identifier___ViewModel(navigator: self)
        viewController.viewModel = viewModel
        /// TODO: Do something with your viewController. You can setViewController, push or present.
        /// also you can use strategy for CoordinationResult.
        return Observable.never()
    }



}

extension ___VARIABLE_productName:identifier___Coordinator: ___VARIABLE_productName:identifier___Navigator {

    
}